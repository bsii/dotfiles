set-option -g xterm-keys on

## while setting up, clear all these every time we reload.  
###### unbind-key -n M-`
###### unbind-key M-`
###### unbind-key M-~
###### unbind-key M-Tab
###### unbind-key -n M-Tab
###### # unbind-key M-S-Tab #???
###### unbind-key C-Tab
###### unbind-key C-S-Tab 
###### unbind-key -n C-Tab
###### unbind-key -n C-S-Tab 

unbind-key C-b
unbind-key `
unbind-key -n `
unbind-key M-`

set -g prefix "M-`"

set -g @plugin 'tmux-plugins/tpm'

## be skeptical of the sensible. load it early.
## it modifies the repeat pressing of prefix related
## combos I set up right below
set -g @plugin 'tmux-plugins/tmux-sensible'

# bind-key -r ` last-window
# bind-key -r M-` last-window
# bind-key -rn  M-~ select-pane -t :.-

# bind-key -r ` select-pane -t :.+
# bind-key -r M-` select-pane -t :.+
# bind-key -rn  M-~ select-pane -t :.-


# one way to switch panes...
bind-key -nr M-Tab select-pane -t :.+
bind-key  M-Tab send-key M-Tab    # pass through M-T after prefix

# then a billion ways to switch windows.
bind-key -r ` last-window
bind-key -r M-` last-window
bind-key -rn  M-~ last-window  # FREE ME

## like chrome/safari tab navigation but with option
bind-key -nr M-{   previous-window
bind-key -nr M-}   next-window

## http://stackoverflow.com/questions/15470001/bind-ctrltab-and-ctrlshifttab-in-tmux
## iterm is confirgured to send these!  kctab=\E[27;5;9~, kcstab=\E[27;6;9~,
## and also for M-S_T
# bind-key C-Tab 	send-key   C-Tab   # goofy key code no need to send to anything else
# bind-key C-S-Tab 	send-key   C-S-Tab  # goofy key code no need to send to anything else
#
bind-key -nr C-Tab next-window
bind-key -nr C-S-Tab previous-window
bind-key -nr M-S-Tab previous-window  # ( no-op binding;  the key you get is is C-T

bind-key R source-file ~/.tmux.conf; display-message "~/.tmux.conf is reloaded"

bind-key -n M-?  copy-mode -e \; send-keys ?

source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# bind -n WheelUpPane copy-mode
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -    e'"


bind-key -n PageUp copy-mode -eu
bind-key -n PPage copy-mode -eu
# bind '^[[5~' copy-mode -eu
# bind NPage copy-mode -eu
# bind PageDown copy-mode -eu
# unbind-key "M-1" 


set -g @copy_mode_yank M-y
set -g @copy_mode_put M-Y
set -g @copy_mode_yank_put  C-M-y
set -g @plugin 'tmux-plugins/tmux-yank'

# set -g default-terminal "screen-256color-italic"
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

run '~/.tmux/plugins/tpm/tpm'



# bind-key -r "M-Tab" previous-window
# bind-key  "M-1" select-window -t :=1

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"


set -g mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -t vi-copy    C-WheelUpPane   halfpage-up
bind -t vi-copy    C-WheelDownPane halfpage-down
bind -t emacs-copy C-WheelUpPane   halfpage-up
bind -t emacs-copy C-WheelDownPane halfpage-down


# alternate scrolling activation
#

# # guy replaces this
# bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
# bind-key -t vi-copy PPage page-up
# bind-key -t vi-copy NPage page-down
# # #with this to avoid "spamming page downs"
# bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
# bind-key -T root NPage if-shell -F "#{alternate_on}" "send-keys NPage" "copy-mode -e; send-keys NPage"
